variables:
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - config
  - build
  - install
  - basic-bundles
  - test

default:
  tags:
    - ciao_test_base

before_script:
  - apk --update add git make tar curl

configure:
  stage: config
  script:
    - builder/etc/gitlab-ci.sh configure
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
  needs: []

build:
  stage: build
  script:
    - builder/etc/gitlab-ci.sh build
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  needs: [configure]


install:
  stage: install
  script:
    - builder/etc/gitlab-ci.sh install
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  needs: [build]

ciaopp:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh ciaopp
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  needs: [install]

ciaopp_lite:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh ciaopp_lite
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  needs: [install]

ciaopp_lite.test.incanal_assrts:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - builder/etc/gitlab-ci.sh ciaopp_lite.test.incanal_assrts
  needs: [ciaopp_lite]

ciaopp_lite.analyze.core:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh ciaopp_lite.analyze.core
  needs: [ciaopp_lite]
  artifacts:
    when: always
    paths:
      - build/xmlreport/*.xml
    reports:
      junit:
        - build/xmlreport/module.xml
        - build/xmlreport/gr.xml

ciaopp_lite.test.rtchecks:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - builder/etc/gitlab-ci.sh ciaopp_lite.test.rtchecks
  needs: [ciaopp_lite]

ciaopp_lite.test.incanal:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - builder/etc/gitlab-ci.sh ciaopp_lite.test.incanal
  needs: [ciaopp_lite]

ciaopp_extra.test:
  stage: test
  allow_failure: true
  script:
    - builder/etc/gitlab-ci.sh ciaopp_extra.test
  needs: [ciaopp]

ciaopp_cost.test:
  stage: test
  allow_failure: true
  script:
    - builder/etc/gitlab-ci.sh ciaopp_cost.test
  needs: [ciaopp]

lpdoc:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh lpdoc
  needs: [install]

bibutils:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh bibutils
  needs: [install]

jvm_in_ciao:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh jvm_in_ciao
  needs: [install]

ciao_gui:
  stage: basic-bundles
  script:
    - builder/etc/gitlab-ci.sh ciao_gui
  needs: [install]

wui:
  stage: basic-bundles
  allow_failure: true
  retry:
    max: 2
    when: script_failure
  script:
    - apk add --update nodejs nodejs-npm
    - builder/etc/gitlab-ci.sh wui
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build/
  cache:
    paths:
      - third-party/
  needs: [install]

website:
  stage: test
  allow_failure: true
  script:
    - builder/etc/gitlab-ci.sh website
  needs: [wui]

core.test:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh core
  needs: [install]

core_OC.test:
  stage: test
  script:
    - apk add bash # add bash (currently required for optim-comp scripts)
    - builder/etc/gitlab-ci.sh core_OC.test
  needs: [install]

core.test.rtchecks:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh core.test.rtchecks
  allow_failure: true
  needs: [install]

ciaodbg.test.unittest:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh ciaodbg.test.unittest
  allow_failure: true
  needs: [install]

iso_tests.test:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh iso_tests.test
  allow_failure: true
  needs: [install]

ciao_emacs.test:
  stage: test
  script:
    - apk add emacs-nox
    - builder/etc/gitlab-ci.sh ciao_emacs.test
  needs: [install]

deepfind.test:
  stage: test
  script:
    - builder/etc/gitlab-ci.sh deepfind.test
  needs: [ciaopp_lite]
