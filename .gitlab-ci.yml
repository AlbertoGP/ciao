variables:
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - config
  - build
  - install
  - basic-bundles
  - test

before_script:
  - apk --update add git make tar curl

configure:
  stage: config
  script:
    - ./ciao-boot.sh configure --ciao_ppl:enabled=no
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/

build:
  stage: build
  script:
    - ./ciao-boot.sh build --bin core builder ciaodbg | builder/etc/errstatus
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  dependencies:
    - configure

install:
  stage: install
  script:
    - ./ciao-boot.sh install | builder/etc/errstatus
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  dependencies:
    - build

ciaopp:
  stage: basic-bundles
  script:
    - echo # TODO: artifact too large; prebuilt 3rd party in docker base?
    - echo # apk add m4 autoconf automake libtool # required for PPL build
    - echo # ./ciao-boot.sh configure # --ciao_ppl:enabled=no
    - echo # ./ciao-boot.sh configure --ciao_ppl:enabled=no
    - if [ -x /prebuilt-third-party ]; then mv /prebuilt-third-party third-party; fi # Recover prebuilt third-party from image
    - ./ciao-boot.sh configure
    - ./ciao-boot.sh build --bin -r ciaopp_extra ciaopp | builder/etc/errstatus
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  dependencies:
    - install

ciaopp_lite:
  stage: basic-bundles
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao clean ciaopp
    - rm bndls/ciaopp_extra/ACTIVATE
    - ciao rescan-bundles
    - ciao build --bin ciaopp | builder/etc/errstatus
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  dependencies:
    - install

ciaopp_lite.test.incanal_assrts:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - cd bndls/ciaopp_tests/tests/incanal
    - ./compile.sh
    - ./test_incanal_assrts.sh shfr
  tags:
    - ciao_test_base
  dependencies:
    - ciaopp_lite

ciaopp_lite.analyze.core:
  stage: test
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciaopp-batch gr core/lib/
  tags:
    - ciao_test_base
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build-boot/
      - build/
  dependencies:
    - ciaopp_lite

ciaopp_lite.test.dd_rtchecks:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - sed -i '2i:- use_package(rtchecks).' bndls/ciaopp/src/plai/domains.pl
    - sed -i '9i:- use_package(rtchecks).' bndls/ciaopp/src/plai/fixpo_dd.pl
    - ciao clean ciaopp
    - rm -f bndls/ciaopp_extra/ACTIVATE
    - ciao rescan-bundles
    - ciao build --bin ciaopp | builder/etc/errstatus
    - cd bndls/ciaopp_tests/tests/incanal
    - ./compile.sh
    - ./incanal_intermod_bench_driver qsort del 1 gr --show-lat --steps 5
    - ./incanal_intermod_bench_driver ann del 1 gr --show-lat --steps 5
    - ./incanal_intermod_bench_driver rdtok del 1 gr --show-lat --steps 5
  tags:
    - ciao_test_base
  dependencies:
    - ciaopp_lite

ciaopp_lite.test.incanal:
  stage: test
  script:
    - apk add bash # add bash for the test scripts
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - cd bndls/ciaopp_tests/tests/incanal
    - ./compile.sh
    - ./test_incanal_mon.sh
    - ./quick_run.sh
  tags:
    - ciao_test_base
  dependencies:
    - ciaopp_lite

ciaopp_extra.test:
  stage: test
  allow_failure: true
  script:
    - if [ -x /prebuilt-third-party ]; then mv /prebuilt-third-party third-party; fi # Recover prebuilt third-party from image
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao test ciaopp_extra
  tags:
    - ciao_test_base
  dependencies:
    - ciaopp

ciaopp_extra.test.resources:
  stage: test
  allow_failure: true
  script:
    - if [ -x /prebuilt-third-party ]; then mv /prebuilt-third-party third-party; fi # Recover prebuilt third-party from image
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao custom_run ciaopp_extra resources_test
  tags:
    - ciao_test_base
  dependencies:
    - ciaopp

lpdoc:
  stage: basic-bundles
  script:
    - ./ciao-boot.sh build --bin lpdoc | builder/etc/errstatus
  tags:
    - ciao_test_base
  dependencies:
    - install

bibutils:
  stage: basic-bundles
  script:
    - touch bndls/bibutils/ACTIVATE
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao rescan-bundles
    - ciao build --bin bibutils | builder/etc/errstatus
  tags:
    - ciao_test_base
  dependencies:
    - install

jvm_in_ciao:
  stage: basic-bundles
  script:
    - ./ciao-boot.sh build --bin jvm_in_ciao | builder/etc/errstatus
  tags:
    - ciao_test_base
  dependencies:
    - install

ciao_gui:
  stage: basic-bundles
  script:
    - touch bndls/ciao_gui/ACTIVATE
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao rescan-bundles
    - ciao build --bin ciao_gui | builder/etc/errstatus
  tags:
    - ciao_test_base
  dependencies:
    - install

wui:
  stage: basic-bundles
  allow_failure: true
  retry:
    max: 2
    when: script_failure
  script:
    - apk add --update nodejs nodejs-npm
    - npm install -g bower
    - touch bndls/wui/ACTIVATE
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao rescan-bundles
    - ciao custom_run wui fetch_externals
    - ciao build --bin wui | builder/etc/errstatus
    - ciao custom_run wui dist
  tags:
    - ciao_test_base
  dependencies:
    - install
  artifacts:
    expire_in: 2h
    untracked: true
    paths:
      - build/
  cache:
    paths:
      - third-party/

catalog_ui:
  stage: test
  allow_failure: true
  script:
    - touch bndls/catalog_ui/ACTIVATE
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao rescan-bundles
    - ciao build --bin catalog_ui | builder/etc/errstatus
  tags:
    - ciao_test_base
  dependencies:
    - wui

core.test:
  stage: test
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao test core
  tags:
    - ciao_test_base
  dependencies:
    - install

core_OC.test:
  stage: test
  script:
    - apk add bash # add bash (currently required for optim-comp scripts)
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao rescan-bundles
    - ciao oc:tests full
  tags:
    - ciao_test_base
  dependencies:
    - install

core.test.rtchecks:
  stage: test
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - cd bndls/testsuite/rtchecks
    - ./test_rtchecks.sh
  allow_failure: true
  tags:
    - ciao_test_base

ciaodbg.test.unittest:
  stage: test
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - cd bndls/testsuite/unittest
    - ./run_unittest_tests.pl
  allow_failure: true
  tags:
    - ciao_test_base

iso_tests.test:
  stage: test
  script:
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao test iso_tests
  allow_failure: true
  tags:
    - ciao_test_base

ciao_emacs.test:
  stage: test
  script:
    - apk add emacs-nox
    - ./ciao-boot.sh configure --ciao_ppl:enabled=no
    - eval "$(build/bin/ciao-env --sh)" # update PATH, etc.
    - ciao build ciao_emacs | builder/etc/errstatus
    - ciao test ciao_emacs
  tags:
    - ciao_test_base
  dependencies:
    - install
