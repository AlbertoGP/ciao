#!/bin/sh
#
#  ciao
#
#  The ciao super-command.
#
#  Copyright (C) 2015-2017 Ciao Developer Team
#

# Physical directory where the script is located
_base=$(e=$0;while test -L "$e";do d=$(dirname "$e");e=$(readlink "$e");\
        cd "$d";done;cd "$(dirname "$e")";pwd -P)

# ----------------------------------------------------------------

use_rlwrap=yes # TODO: Turn into an option

# ({{Var}} filled from .hooks.pl)
boot_ciaoroot={{boot_ciaoroot}}
boot_ciaolib={{boot_ciaolib}}
boot_bindir={{boot_bindir}}
boot_ciaohdir={{boot_ciaohdir}}
boot_ciaoengine={{boot_ciaoengine}}

ciao_builder_bin="$_base"/ciao_builder
ciaosh_bin="$_base"/ciaosh
ciao_shell_bin="$_base"/ciao-shell
ciaoc_bin="$_base"/ciaoc

# ----------------------------------------------------------------
# exec wrapper using rlwrap (if needed)

if [ x"$use_rlwrap" = x"yes" ] && [ "${INSIDE_EMACS:-0}" = "0" ] && \
   stty > /dev/null 2>&1 && \
   command -v rlwrap > /dev/null 2>&1; then
    enable_rlwrap=yes
else
    enable_rlwrap=no
fi

rlexec() {
    if [ x"$enable_rlwrap" = x"yes" ]; then
	exec rlwrap -O "\?[- ]" -p'1;34' -w -1 "$@"
    else
	exec "$@"
    fi
}

# ----------------------------------------------------------------

if [ "${PATH:-0}" = "0" ] ; then
    PATH=$_base
else
    case $PATH in
	$_base:* | *:$_base | *:$_base:* ) ;;
	* )
	    PATH=$_base:$PATH ;;
    esac
fi

# ---------------------------------------------------------------------------
# Access to the builder

rlexec_builder() {
    if [ -x "$boot_ciaoengine" ]; then
	unset CIAOALIASPATH
	export CIAOLIB=$boot_ciaolib
	export CIAOROOT=$boot_ciaoroot
	export CIAOHDIR=$boot_ciaohdir
	export CIAOENGINE=$boot_ciaoengine
	rlexec "$CIAOENGINE" "$@" -C -b "$boot_bindir/ciao_builder.sta"
    else
	rlexec "$ciao_builder_bin" "$@"
    fi
}

exec_builder() {
    enable_rlwrap=no rlexec_builder "$@"
}

# TODO: port; fix for global installation
exec_oc_builder() {
    exec "$boot_ciaoroot"/builder/src/oc_builder.bash "$@"
}

# ----------------------------------------------------------------
# NOTE: General help driver is in builder/src/ciaocl_help.pl

do_help() {
    if [ $# = 0 ]; then
	action=""
    else
	action=$1
	shift
    fi
    case $action in
	'')       exec_builder help ;;
	toplevel) exec "$ciaosh_bin" -h ;;
	run) # TODO: This command has no help
	    cat <<EOF
Usage: ciao-shell <program>
EOF
	    ;;
	comp)     exec "$ciaoc_bin" -h ;;
	*)        exec_builder help "$action"
    esac
    exit 1
}

# ----------------------------------------------------------------

# Detect calls to OptimComp builder (note: opts may be before action!)
# TODO: UNDOCUMENTED! (move 'oc:' into the target, not the action)
needs_oc_builder() {
    while [ $# -gt 0 ]; do
	case $1 in
	    --cache-dir) shift ;;
	    --rtchecks|--stats|--verbose|--profile) true ;;
	    oc:*) return 0 ;; # An oc:* action 
	    *)    break
	esac
	shift
    done
    return 1 # Not an oc:* action 
}

if needs_oc_builder "$@"; then
    exec_oc_builder "$@"
fi

if [ $# = 0 ]; then
    action=toplevel
else
    action=$1
    shift
fi
case $action in
    # TODO: move ExtraCommands to a file that is read by ciaosh directly
    toplevel) rlexec "$ciaosh_bin" "$@" {{ExtraCommands}} ;;
    run)      exec "$ciao_shell_bin" "$@" ;;
    comp)     exec "$ciaoc_bin" "$@" ;;
    help|-h|--help) do_help "$@" ;;
    *)        rlexec_builder "$action" "$@"
esac

