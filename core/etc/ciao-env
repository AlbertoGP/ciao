#!/bin/sh

# Physical directory where the script is located
_base=$(e=$0;while test -L "$e";do d=$(dirname "$e");e=$(readlink "$e");\
        cd "$d";done;cd "$(dirname "$e")";pwd -P)

# Options

target=sh
reloc=no

while [ $# -gt 0 ]; do
    case "$1" in
	--sh|--bash) target=sh ;;
	--csh|--tcsh) target=csh ;;
#	--reloc) reloc=yes ;;
	*) 
	    cat <<EOF 
ERROR: Unrecognized option $1
EOF
	    exit 1
	    ;;
    esac
    shift
done

# ---------------------------------------------------------------------------
# Add paths (from CIAOPATH and CIAOROOT)

# Return path:old2, where old2 is old where path is removed, or just
# path if old is empty
concat_nodup() { # path old
    if [ x"$2" = x"" ]; then
	printf "%s" "$1"
    else
	printf "%s" "$1":$(printf "%s" "$2" | sed -e s:'\:'"$1"::g)
    fi
}

# Add a binary path
add_bindir() { # dir
    PATH=$(concat_nodup "$1" "$PATH")
}
# Add a documentation path (for MANPATH and INFOPATH)
add_docdir() { # dir
    if [ "${INFOPATH:-0}" = "0" ]; then
	INFOPATH=/usr/info:/usr/share/info:/usr/local/info
    fi
    MANPATH=$(concat_nodup "$1" "$MANPATH")
    INFOPATH=$(concat_nodup "$1" "$INFOPATH")
}

# Add additional paths from CIAOPATH
get_paths() {
    if [ x"$CIAOPATH" = x"" ]; then
	curr_ciaopath=$HOME/.ciao # Use default (even if it does not exist)
    else
	curr_ciaopath=$CIAOPATH
    fi
    IFS=: get_paths_
}
get_paths_() {
    revpath=
    for i in $curr_ciaopath; do # reverse
	revpath=$i':'$revpath
    done
    revpath=$(printf "%s" "$revpath" | sed -e s:'\:$'::g) # remove last :
    get_paths__ $revpath
}
get_paths__() {
    unset IFS
    for i in "$@"; do
	add_bindir "$i"/build/bin
	add_docdir "$i"/build/doc
    done
}

# ---------------------------------------------------------------------------

env_sh_help() {
    cat <<EOF
# Run this command to setup your environment:
# 
# eval "\$(ciao-env --sh)"
EOF
}

env_sh() {
    cat <<EOF
export PATH="$PATH"
export MANPATH="$MANPATH"
export INFOPATH="$INFOPATH"
EOF
}

env_sh_reloc() {
    cat <<EOF
export CIAOENGINE="$CIAOENGINE"
export CIAOHDIR="$CIAOHDIR"
export CIAOLIB="$CIAOLIB"
EOF
}

env_csh() {
    cat <<EOF
setenv PATH "$PATH"
setenv MANPATH "$MANPATH"
setenv INFOPATH "$INFOPATH"
EOF
}

env_csh_reloc() {
    cat <<EOF
setenv CIAOENGINE "$CIAOENGINE"
setenv CIAOHDIR "$CIAOHDIR"
setenv CIAOLIB "$CIAOLIB"
EOF
}

# Use DOTprofile
. "$_base"/DOTprofile
get_paths
# DOTprofile contains info for relocatable
if [ x"${CIAOENGINE}" != x"" ]; then
    reloc=yes
fi

# Print commands to change environment
case $target in 
    sh) env_sh ;;
    csh) env_csh ;;
esac
if [ $reloc = yes ]; then
    case $target in 
	sh) env_sh_reloc ;;
	csh) env_csh_reloc ;;
    esac
fi
case $target in 
    sh) env_sh_help ;;
    # csh) ...
    #   # comments are not valid in eval for csh
    #   eval `ciao-env --csh`
esac

    
