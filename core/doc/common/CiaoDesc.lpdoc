@bf{Ciao} is a @em{general purpose}, @index{multi-paradigm} programming
language in the Prolog family. Its modular design allows working with
@em{fully declarative subsets} of Prolog and also to @em{extend} these
subsets both syntactically and semantically. Most importantly, these
restrictions and extensions can be activated separately on each
program module so that several extensions can coexist in the same
application for different modules, providing both clear program
semantics and the precise assumptions required to perform effective
global program analysis and static debugging and optimization.

The Ciao language is intended to support several kinds of uses:
@begin{itemize}
@item @bf{Ciao} can be used as @em{a classical Prolog} and @em{logic
  programming} system. It includes standard @bf{ISO-Prolog} as a
  sublanguage and a program development environment similar to that of
  traditional Prolog and @em{constraint logic programming} (CLP)
  implementations. The @bf{Ciao} programming environment includes a
  classical top level and a rich Emacs interface with an embeddable
  source-level debugger, a number of execution visualization tools,
  and several useful extensions such as alternative control rules
  (breadth-first search, iterative deepening, ...), and several
  constraint domains.

@item @bf{Ciao} includes @comment{, through extensions,} many @em{modern 
  general-purpose programming language} features and idioms, such as
  functions, higher-order (with predicate abstractions), mutables, 
  records, persistence, concurrency (threads/engines), parallel
  execution, or distributed execution. @bf{Ciao} includes an
  @bf{assertion language} for declaring (@em{optional}) program 
  properties@comment{ (including 
  types and modes, but also determinacy, non-failure, cost,
  etc.)}, automatic static inference and static/dynamic checking of
  such assertions, testing, documentation, etc. (some tasks 
  performed by the @bf{CiaoPP Program Processor} (@apl{ciaopp})). 
@comment{(distributed separately)}

@item @bf{Ciao} supports @em{programming in the large} with
  separate/incremental compiler, an integrated build system, an
  automatic @comment{assertion-based} 
  documentation generator (@apl{lpdoc}), and a set of standard 
  and contributed libraries providing useful data structures, access
  to the operating system and networking, Web programming, as well as
  foreign interfaces, and several bindings to different languages and
  systems. 
@comment{(C, Java, TclTk, relational databases, etc.)}

@item @bf{Ciao} supports @em{programming in the small} through its
  dynamic language features (dynamically typed, dynamic program
  modification). It supports producing small executables (including
  only those libraries actually used by the program) and writing
  scripts.

@item @bf{Ciao} is also a very good platform for experimenting with
  new language features, @comment{domain-specific} languages,
  analyses, and program transformations.

@end{itemize}

The @bf{Ciao} distribution consists in a complete @index{public
domain}, open-source implementation, very competitive with other
commercial and academic languages (including other Prolog/CLP
systems), and distributed under the @concept{GNU Library General
Public License (LGPL)}. 
